#!/usr/bin/ruby

require 'optparse'
require 'fcntl'

# Setup the options parser
options = {}
optparse = OptionParser.new do|opts|

	# This is the help banner, which just explains the command syntax
	opts.banner = "
  Usage: textplay [options]
       textplay reads from STDIN and writes to STDOUT."

	# The default conversion type is HTML, if the '-f' option is set, convert to FDX
	options[:fdx] = false
	opts.on( '-f', '--fdx', "Convert to Final Draft .fdx" ) do
		options[:fdx] = true
	end

end

# Parse the options and remove them from ARGV
optparse.parse!

# NOTE: Input / Output

# Check to see if anything is in STDIN
if STDIN.isatty == TRUE

	# If nothing is there, check for --help
  # TODO remove it!
	if options[:help] == true
		# and send help text to less
		IO.popen("less", "w") { |f| f.puts help_text }
	else
		# otherwise display the option banner
		puts optparse
	end
	exit(-1)

else

	# If there IS content in STDIN, read it
	text = STDIN.read

end

text = remove_elements_not_printable(text)
text = handle_special_chars(text)

# -------- fountain escapes

# Action escape
text = text.gsub(/^\!(.+)/, '<action>\1</action>')

# Fountain Rules
text = text.gsub(/^[\ \t]*>[ ]*(.+?)[ ]*<[\ \t]*({{%}})?$/, '<center>\1\2</center>')
text = text.gsub(/^[\ \t]*\&#62;[ \t]*(.*)$/,'<transition>\1</transition>')
text = text.gsub(/^\.(?!\.)[\ \t]*(.*)$/, '<slug>\1</slug>')
text = text.gsub(/\\\*/, '&#42;')

# Strip-out Fountain Sections and Synopses
text = text.gsub(/^[ \t]*#+[ \t]*(.*)/, "\n" + '<note>\1</note>' + "\n")
text = text.gsub(/^[ \t]*=[ \t]*(.*)/, "\n" + '<note>\1</note>' + "\n")
# these need not be completely removed simply because they do not span multiple lines

text = process_transition(text)
text = process_dialogue(text)
text = process_heading(text)

# ------- Misc

# Any untagged paragraph gets tagged as 'action'
text = text.gsub(/^([^\n\<].*)/, '<action>\1</action>')

text = process_styles_and_japanese_chars(text)
text = cleanup_text(text)
text = transform_to_fdx_formatting(text)

# NOTE: PHASE 6 - Output
# -----------------------------------------------------------------------------
output = format_file_to_output(text)
puts output
